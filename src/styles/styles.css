/* Minimal base styles for Guess Word */
:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;
  
  /* Layout variables */
  --header-height: 80px;
  --input-dock-height: 120px;
  --card-gap: 1rem;
  --border-radius: 12px;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  overflow-x: hidden;
}

/* Screen reader only - for accessibility */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* Header Bar */
.header-bar {
  height: var(--header-height);
  padding: 0 1rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  background: rgba(0, 0, 0, 0.05);
  backdrop-filter: blur(10px);
  position: sticky;
  top: 0;
  z-index: 100;
}

.header-content {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  max-width: 1200px;
  margin: 0 auto;
}

.title {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0;
}

.header-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.mode-select {
  padding: 0.5rem 0.75rem;
  border-radius: 6px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  background: rgba(255, 255, 255, 0.1);
  color: inherit;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.mode-select:hover {
  background: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.3);
}

.mode-select:focus {
  outline: none;
  border-color: #4CAF50;
  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);
}

.score-display {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  font-size: 0.9rem;
  gap: 0.25rem;
}

.score {
  font-weight: 500;
}

.timer {
  font-size: 1rem;
  font-weight: 600;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  background: rgba(76, 175, 80, 0.2);
  color: #4CAF50;
  transition: all 0.3s ease;
}

/* Timer warning state - handled via class in component */
.timer-warning {
  background: rgba(255, 152, 0, 0.2);
  color: #FF9800;
  animation: timerPulse 1s ease-in-out infinite;
}

/* Timer critical state */
.timer-critical {
  background: rgba(244, 67, 54, 0.2);
  color: #F44336;
  animation: timerPulse 0.5s ease-in-out infinite;
}

@keyframes timerPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.9;
  }
}

/* Main Game Area */
.game-area {
  flex: 1;
  padding: 2rem 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--card-gap);
  max-width: 1200px;
  margin: 0 auto;
  width: 100%;
}

.cards-container {
  display: flex;
  flex-direction: column;
  gap: var(--card-gap);
  width: 100%;
  max-width: 400px;
}

/* Image Cards */
.image-card {
  background: rgba(255, 255, 255, 0.05);
  border-radius: var(--border-radius);
  overflow: hidden;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  border: 2px solid transparent;
  position: relative;
  touch-action: manipulation; /* Improves mobile tap responsiveness */
  -webkit-tap-highlight-color: rgba(76, 175, 80, 0.2); /* Mobile tap feedback */
}

/* Add tap hint for mobile users */
.image-card::after {
  content: 'ðŸ‘†';
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  font-size: 1.2rem;
  opacity: 0.5;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

.image-card:hover::after {
  opacity: 0.8;
}

.image-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  border-color: rgba(255, 255, 255, 0.2);
}

.image-card:active {
  transform: translateY(0);
}

.image-container {
  aspect-ratio: 3 / 4; /* Portrait aspect ratio */
  width: 100%;
  position: relative;
  background: rgba(255, 255, 255, 0.1);
}

.card-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.image-placeholder {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
}

.placeholder-text {
  font-size: 1.2rem;
  opacity: 0.6;
}

/* WordPart revealed on click */
.wordpart-reveal {
  font-size: 2rem;
  font-weight: 600;
  opacity: 1;
  color: #4CAF50;
  animation: revealFade 0.3s ease-in;
}

@keyframes revealFade {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Answer Card Backdrop */
.answer-card-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 499;
  backdrop-filter: blur(4px);
}

/* Answer Card */
.answer-card {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 500;
  max-width: 500px;
  width: 90%;
  border-radius: var(--border-radius);
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  padding: 2rem;
  backdrop-filter: blur(10px);
}

.answer-card-correct {
  background: linear-gradient(135deg, rgba(76, 175, 80, 0.95), rgba(56, 142, 60, 0.95));
}

.answer-card-incorrect {
  background: linear-gradient(135deg, rgba(244, 67, 54, 0.95), rgba(211, 47, 47, 0.95));
}

.answer-card-clickable {
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.answer-card-clickable:hover {
  transform: translate(-50%, -50%) scale(1.02);
  box-shadow: 0 25px 70px rgba(0, 0, 0, 0.6);
}

.answer-card-clickable:active {
  transform: translate(-50%, -50%) scale(0.98);
}

.answer-card-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
}

.answer-image-container {
  width: 100%;
  max-width: 300px;
  aspect-ratio: 3 / 4;
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

.answer-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.answer-word {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  text-align: center;
}

.answer-label {
  font-size: 0.9rem;
  opacity: 0.9;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.answer-text {
  font-size: 2rem;
  font-weight: 700;
  color: white;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

/* Answer Card Transitions */
.answer-card-fade {
  animation: fadeIn var(--transition-duration, 500ms) ease-out;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.9);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

.answer-card-slide {
  animation: slideUp var(--transition-duration, 500ms) ease-out;
}

@keyframes slideUp {
  0% {
    opacity: 0;
    transform: translate(-50%, -30%);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}

/* Input Dock */
.input-dock {
  height: var(--input-dock-height);
  padding: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  background: rgba(0, 0, 0, 0.05);
  backdrop-filter: blur(10px);
  position: sticky;
  bottom: 0;
}

.input-form {
  max-width: 1200px;
  margin: 0 auto;
}

.input-group {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.word-input {
  padding: 1rem;
  border-radius: var(--border-radius);
  border: 2px solid rgba(255, 255, 255, 0.2);
  background: rgba(255, 255, 255, 0.1);
  color: inherit;
  font-size: 1.1rem;
  width: 100%;
}

.word-input:focus {
  outline: none;
  border-color: #4CAF50;
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.2);
  animation: focusPulse 0.3s ease-out;
}

@keyframes focusPulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}

.button-group {
  display: flex;
  gap: 0.75rem;
}

.submit-btn,
.exit-btn {
  flex: 1;
  padding: 0.75rem 1.5rem;
  border-radius: var(--border-radius);
  border: none;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.submit-btn {
  background: #4CAF50;
  color: white;
}

.submit-btn:hover:not(:disabled) {
  background: #45a049;
  transform: translateY(-1px);
}

.submit-btn:disabled {
  background: rgba(76, 175, 80, 0.3);
  cursor: not-allowed;
}

.exit-btn {
  background: rgba(255, 255, 255, 0.1);
  color: inherit;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.exit-btn:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

/* Summary Modal */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 1rem;
}

.modal-content {
  background: var(--background-color, #1a1a1a);
  border-radius: var(--border-radius);
  max-width: 400px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
}

.modal-header {
  padding: 1.5rem 1.5rem 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-header h2 {
  margin: 0;
  font-size: 1.5rem;
}

.close-btn {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: inherit;
  padding: 0.25rem;
  border-radius: 4px;
}

.close-btn:hover {
  background: rgba(255, 255, 255, 0.1);
}

.modal-body {
  padding: 1.5rem;
}

.score-summary {
  text-align: center;
  margin-bottom: 2rem;
}

.final-score {
  font-size: 1.1rem;
  margin-bottom: 1rem;
}

.score-percentage {
  font-size: 2rem;
  font-weight: bold;
  color: #4CAF50;
}

.modal-actions {
  display: flex;
  gap: 1rem;
}

.replay-btn,
.change-mode-btn {
  flex: 1;
  padding: 0.75rem 1.5rem;
  border-radius: var(--border-radius);
  border: none;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.replay-btn {
  background: #4CAF50;
  color: white;
}

.replay-btn:hover {
  background: #45a049;
}

.change-mode-btn {
  background: rgba(255, 255, 255, 0.1);
  color: inherit;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.change-mode-btn:hover {
  background: rgba(255, 255, 255, 0.2);
}

/* Desktop Responsive */
@media (min-width: 768px) {
  .cards-container {
    flex-direction: row;
    max-width: 600px;
    gap: 2rem;
  }
  
  .image-card {
    flex: 1;
  }
  
  .input-group {
    flex-direction: row;
    align-items: center;
  }
  
  .word-input {
    flex: 1;
    margin-right: 1rem;
  }
  
  .button-group {
    flex-shrink: 0;
    width: auto;
  }
  
  .submit-btn,
  .exit-btn {
    flex: none;
    min-width: 100px;
  }
}

/* Effects Layer */

/* Sad Face Overlay */
.sad-face-overlay {
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 600;
  animation: sadFaceAppear 0.3s ease-out;
  pointer-events: none;
}

.sad-face-svg {
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
  animation: sadFaceBob 2s ease-in-out infinite;
}

@keyframes sadFaceAppear {
  0% {
    opacity: 0;
    transform: scale(0) rotate(-180deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
}

@keyframes sadFaceBob {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Shake Effect for Images */
.effect-shake-active ~ main .image-card {
  animation: shakeEffect 0.5s ease-in-out;
}

@keyframes shakeEffect {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}

/* Collide Effect for Images */
.effect-collide-active ~ main .cards-container {
  animation: collideContainer 0.7s ease-out;
}

.effect-collide-active ~ main .image-card:first-child {
  animation: collideLeft 0.7s ease-out;
}

.effect-collide-active ~ main .image-card:last-child {
  animation: collideRight 0.7s ease-out;
}

@keyframes collideContainer {
  0% {
    gap: var(--card-gap);
  }
  50% {
    gap: 0;
  }
  100% {
    gap: var(--card-gap);
  }
}

@keyframes collideLeft {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(20%);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes collideRight {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-20%);
  }
  100% {
    transform: translateX(0);
  }
}

/* Confetti Effect */
.confetti-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 700;
  overflow: hidden;
}

.confetti-piece {
  position: absolute;
  width: 10px;
  height: 10px;
  top: -10px;
  opacity: 0;
  animation: confettiFall 3s ease-in forwards;
}

@keyframes confettiFall {
  0% {
    top: -10px;
    opacity: 1;
    transform: translateX(0) rotateZ(0deg);
  }
  100% {
    top: 100vh;
    opacity: 0;
    transform: translateX(calc(var(--random-x, 0) * 100px)) rotateZ(720deg);
  }
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .effect-shake-active ~ main .image-card,
  .effect-collide-active ~ main .image-card,
  .effect-collide-active ~ main .cards-container,
  .sad-face-svg,
  .confetti-piece {
    animation: none !important;
  }
  
  .sad-face-overlay {
    animation: none !important;
    opacity: 0.8;
  }
}

/* Loading and Error States */
.loading-state,
.error-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 2rem;
  text-align: center;
}

.loading-state h1,
.error-state h1 {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.loading-state p,
.error-state p {
  font-size: 1.1rem;
  opacity: 0.8;
  margin-bottom: 2rem;
}

.error-state button {
  padding: 0.75rem 1.5rem;
  border-radius: var(--border-radius);
  border: none;
  background: #4CAF50;
  color: white;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.error-state button:hover {
  background: #45a049;
  transform: translateY(-1px);
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  
  .modal-content {
    --background-color: #ffffff;
  }
}